//! A module comment

pub(
	::some::module::here,
	^^::another::path,
	wild::cards::and::inner::super::^^^::^::*,
	self::specific::qualification,
	foo::bar::self::baz,
	this::{is::{a::tree}, of::{paths}, valid::{in::only::{some::contexts, *}}},
	{wow::these::{are, basically::lists, *}, intervention::when::*, {{{{this::is, technically, {legal::*}}}}}},
	crate::*,
	crate::{{*}, *},
) {
	fn we() {}

	@AttributesCanBeAppliedToBlocksToo
	pub() {
		fn all() {}
		fn inherit() {}
	}
	fn the() {}
	fn parent() {}
	fn qualifier() {}

	@ThisIsANormalAttribute
	mod nesting {
		@!InnerAttribute
		@!InnerAttributeWithAnArgument[...]
		@!::inner_attribute::with::a::path
		@!::inner_attribute::with::an_argument::and::path[...]

		@OuterAttribute
		@OuterAttributeWithAnArgument[...]
		@::outer_attribute::with::a::path
		@::outer_attribute::with::an_argument::and::path[...]
		{
			/// Why did I make this syntax so flexible?!
			@look_ma::no_additional::qualifiers { ... }
			pub(we, have::not, tested, these, in, a, while)
			pub(oh, yeah, we, can, have, multiple, on, a, single, block)
			{
				use super::another::path::example;
			}

			use foo;
		}
	}
}

@ThisSyntaxIsWeird {
	@Like::^::Really
	fn why() {}

	pub fn poor_parser() {}
}

//> Regions should not distribute

/// This doc comment should (Note: we can't put a region in between these)
/// also, we're multiline.
{
	fn foo() {}
	fn bar() {}
}

use ::{
	foo::bar::^^::baz::^::{a as b, c},
	wildcard::is::sometimes::{*, valid as foo},
};

@ModPath("but_link_here_pls.crew")
mod load_another_file_pls;
