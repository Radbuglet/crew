pub class MyClass {
	type MyAlias = path::to::Type<With = Generics>;

	in type MyGeneric: path::to::extension = other::ty;

	fn test_1<A: My::Type::Here<Foo = Bar, Baz>, B, C: B>(a: A, b: B) -> C {
		...
	}

	pub static impl(foo.bar) fn test_2(a: TypeA, b: TypeB) {
		val foo = $"This is a poem.\
		           |It's not very good.\
		           |But is has multiple lines.\
		           |And {"templating"}.
		           | - A poet\
		           ";
	}

	pub in fn proto_1(a: B);
	pub in fn proto_2<D>(c: D) -> (u32, i32);

	val foo: Bar;
}
